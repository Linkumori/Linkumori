name: Linkumori Builds and release

permissions:
  contents: write  

on:
  release:
    types: [created]

jobs:
  pack-and-release:
    runs-on: ubuntu-latest
    env:
      EXTENSION_ID: kcpfnbjlimolkcjllfooaipdpdjmjigg
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get previous tag
        id: previoustag
        run: |
          PREVIOUS_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "none")
          echo "tag=$PREVIOUS_TAG" >> $GITHUB_OUTPUT

      - name: Compare versions
        id: version_check
        continue-on-error: false
        run: |
          CURRENT_VERSION=$(jq -r .version manifest.json)
          PREVIOUS_VERSION=$(curl -s "https://raw.githubusercontent.com/${{ github.repository }}/${{ steps.previoustag.outputs.tag }}/manifest.json" | jq -r .version 2>/dev/null || echo "0.0.0")
          
          echo "Current manifest version: $CURRENT_VERSION"
          echo "Previous version: $PREVIOUS_VERSION"
          
          if [ "$CURRENT_VERSION" = "$PREVIOUS_VERSION" ]; then
            echo "::error::Manifest version has not been updated from $PREVIOUS_VERSION"
            exit 1
          else
            echo "‚úÖ Manifest version updated from $PREVIOUS_VERSION to $CURRENT_VERSION"
            echo "update=Updated from $PREVIOUS_VERSION to $CURRENT_VERSION" >> $GITHUB_OUTPUT
          fi

      - name: Download CONFIG
        run: |
          wget https://github.com/Linkumori/Linkumori-Autoupdate/archive/refs/tags/2.0.zip -O config.zip
          echo "Downloaded configs"

      - name: Create PEM file
        run: |
          echo "${{ secrets.EXTENSION_PEM }}" > extension.pem
          chmod 600 extension.pem

      - name: Install Chrome
        run: |
          wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
          echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" | sudo tee /etc/apt/sources.list.d.google-chrome.list
          sudo apt-get update
          sudo apt-get install -y google-chrome-stable

      - name: Fetch manifest version
        id: manifest
        run: |
          MANIFEST_VERSION=$(jq -r .version manifest.json)
          echo "version=$MANIFEST_VERSION" >> $GITHUB_OUTPUT

      - name: Create Chrome Web Store version
        run: |
          # Create webstore directory
          mkdir webstore_ext
          
          # Copy all files except excluded ones to webstore directory
          rsync -av --exclude='*.pem' --exclude='.git*' --exclude='.github' --exclude='*.crx' . webstore_ext/
          
          # Create ZIP file for Chrome Web Store
          cd webstore_ext
          zip -r ../Linkumori-webstore.zip .
          cd ..
          
          # Clean up
          rm -rf webstore_ext

      - name: Pack Self-hosted Extension
        run: |
          # Create self-hosted directory
          mkdir selfhosted_ext
          
          # Create manifest with self-hosted update URL
          jq '.update_url = "https://github.com/Linkumori/Linkumori-Extension/releases/latest/download/updates.xml"' manifest.json > selfhosted_ext/manifest.json
          
          # Copy all files except excluded ones to self-hosted directory
          rsync -av --exclude='*.pem' --exclude='.git*' --exclude='.github' --exclude='*.crx' --exclude='manifest.json' . selfhosted_ext/
          
          # Pack extension with PEM file
          google-chrome --pack-extension="$(pwd)/selfhosted_ext" --pack-extension-key="$(pwd)/extension.pem"
          mv selfhosted_ext.crx "Linkumori.crx"
          
          # Create updates.xml
          cat > updates.xml << EOL
          <?xml version='1.0' encoding='UTF-8'?>
          <gupdate xmlns='http://www.google.com/update2/response' protocol='2.0'>
            <app appid="kcpfnbjlimolkcjllfooaipdpdjmjigg">
              <updatecheck 
                codebase='https://github.com/Linkumori/Linkumori-Extension/releases/latest/download/Linkumori.crx' 
                version='${{ steps.manifest.outputs.version }}' 
                prodversionmin='121.0'/>
            </app>
          </gupdate>
          EOL
          
          # Clean up
          rm -rf selfhosted_ext

      - name: Get Commit History
        id: get_commit_history
        run: |
          PREV_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "none")
          if [ "$PREV_TAG" = "none" ]; then
            HISTORY=$(git log --pretty=format:"* %h - %s (%an)" -10)
          else
            HISTORY=$(git log --pretty=format:"* %h - %s (%an)" $PREV_TAG..HEAD)
          fi
          echo "history<<EOF" >> $GITHUB_OUTPUT
          echo "$HISTORY" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Get Release Body
        id: get_release_body
        run: |
          body=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/releases/${{ github.event.release.id }}" \
            | jq -r .body)
          echo "RELEASE_BODY<<EOF" >> $GITHUB_ENV
          echo "$body" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Get access token
        id: get-token
        run: |
          RESPONSE=$(curl -s -X POST \
            -d "client_id=${{ secrets.CLIENT_ID }}" \
            -d "client_secret=${{ secrets.CLIENT_SECRET }}" \
            -d "refresh_token=${{ secrets.REFRESH_TOKEN }}" \
            -d "grant_type=refresh_token" \
            "https://oauth2.googleapis.com/token")
          
          ACCESS_TOKEN=$(echo $RESPONSE | jq -r '.access_token')
          echo "access_token=$ACCESS_TOKEN" >> $GITHUB_OUTPUT

      # Upload to Chrome Web Store
      - name: Upload to Chrome Web Store
        run: |
          # Upload the ZIP file
          UPLOAD_RESPONSE=$(curl -s -X PUT \
            -H "Authorization: Bearer ${{ steps.get-token.outputs.access_token }}" \
            -H "x-goog-api-version: 2" \
            -T Linkumori-webstore.zip \
            "https://www.googleapis.com/upload/chromewebstore/v1.1/items/${{ secrets.EXTENSION_ID }}")
          
          # Check upload status
          UPLOAD_STATUS=$(echo $UPLOAD_RESPONSE | jq -r '.uploadState')
          
          if [ "$UPLOAD_STATUS" != "SUCCESS" ]; then
            echo "Upload failed with response: $UPLOAD_RESPONSE"
            exit 1
          fi
          
          # Publish the extension
          PUBLISH_RESPONSE=$(curl -s -X POST \
            -H "Authorization: Bearer ${{ steps.get-token.outputs.access_token }}" \
            -H "x-goog-api-version: 2" \
            -H "Content-Length: 0" \
            "https://www.googleapis.com/chromewebstore/v1.1/items/${{ secrets.EXTENSION_ID }}/publish")
          
          PUBLISH_STATUS=$(echo $PUBLISH_RESPONSE | jq -r '.status[0]')
          
          if [ "$PUBLISH_STATUS" != "OK" ]; then
            echo "Publishing failed with response: $PUBLISH_RESPONSE"
            exit 1
          fi
          
          echo "Extension successfully uploaded and published!"

      - name: Update Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            Linkumori.crx
            Linkumori-webstore.zip
            updates.xml
            config.zip
          body: |
            ${{ env.RELEASE_BODY }}
            
            Version Status: ${{ steps.version_check.outputs.update || steps.version_check.outputs.warning }}
            
            ## üìù Commit History
            ```
            ${{ steps.get_commit_history.outputs.history }}
            ```
            
            ## ‚ö° Quick Installation
            
            ### Method 1: One-Click Install (Self-hosted version - Recommended)
            1. Download `Linkumori.crx` from above
            2. Open chrome://extensions (or edge://extensions)
            3. Enable "Developer mode" (top-right corner)
            4. Drag & drop the .crx file into the extensions page
            
            ### Method 2: Chrome Web Store Version
            1. Download `Linkumori-webstore.zip`
            2. Unzip the file
            3. Go to chrome://extensions
            4. Enable "Developer mode"
            5. Click "Load unpacked" ‚Üí select the unzipped folder
            
            ### Method 3: Developer Installation
            1. Download source code (zip)
            2. Extract to a folder
            3. Go to chrome://extensions
            4. Enable "Developer mode"
            5. Click "Load unpacked" ‚Üí select the extracted folder
            
            ## üîÑ Auto-Updates
            * Self-hosted version: Updates through GitHub releases
            * Web Store version: Updates through Chrome Web Store
            
            ## üåê Supported Browsers
            * ‚úÖ Google Chrome
            * ‚úÖ Microsoft Edge
            * ‚úÖ Brave
            * ‚úÖ Opera GX
            * ‚úÖ Vivaldi
            
            ## ‚ö†Ô∏è Keep in Mind
            * If using Method 2 or 3, keep the source folder (required for the extension to work)
            * First-time installation may show a warning - this is normal for developer mode extensions
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Cleanup
        if: always()
        run: |
          rm -f extension.pem
          rm -rf webstore_ext
          rm -rf selfhosted_ext
          rm -f *.zip
