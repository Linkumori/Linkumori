name: Linkumori Builds and release

permissions:
  contents: write  

on:
  release:
    types: [created]

jobs:
  pack-and-release:
    runs-on: ubuntu-latest
    env:
      EXTENSION_ID: kcpfnbjlimolkcjllfooaipdpdjmjigg
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get previous tag
        id: previoustag
        run: |
          PREVIOUS_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "none")
          echo "tag=$PREVIOUS_TAG" >> $GITHUB_OUTPUT

      - name: Compare versions
        id: version_check
        continue-on-error: false
        run: |
          CURRENT_VERSION=$(jq -r .version manifest.json)
          PREVIOUS_VERSION=$(curl -s "https://raw.githubusercontent.com/${{ github.repository }}/${{ steps.previoustag.outputs.tag }}/manifest.json" | jq -r .version 2>/dev/null || echo "0.0.0")
          
          echo "Current manifest version: $CURRENT_VERSION"
          echo "Previous version: $PREVIOUS_VERSION"
          
          if [ "$CURRENT_VERSION" = "$PREVIOUS_VERSION" ]; then
            echo "::error::Manifest version has not been updated from $PREVIOUS_VERSION"
            exit 1
          else
            echo "‚úÖ Manifest version updated from $PREVIOUS_VERSION to $CURRENT_VERSION"
            echo "update=Updated from $PREVIOUS_VERSION to $CURRENT_VERSION" >> $GITHUB_OUTPUT
          fi

      - name: Download CONFIG
        run: |
          wget https://github.com/Linkumori/Linkumori-Autoupdate/archive/refs/tags/2.0.zip -O config.zip
          echo "Downloaded configs"

      - name: Create PEM file
        run: |
          cat > extension.pem << 'EOL'
          -----BEGIN PRIVATE KEY-----
          MIIEvAIBADANBgkqhkiG9w0BAQEFAASCBKYwggSiAgEAAoIBAQCp8Q+kavs7radl
          cNbSkJFovhnAkg0v3CMKdoiVK26CvSEkuJXfLB3FOPlFkSPo1cj9Zwld2fW59V5/
          Z6gQ28+pxf2o0N+1Pyi80JtbT5DME9gW1GiTqX41Jm/wYINMSBGqhpUhklwcZZSB
          Fox+Fkxz7j4pm64f95HKa6ETMlrhZ5p1a6KhzMHnl83jdB/E61cSaWKo1ZjvWJO6
          Ap075d5MscKS1pAsrd9EnN3FcxICokD1GpTmkoNsDyWcF8A+kKXotUb+Ix0TwirK
          4IKV3IpJqpIVwdPPmcG1/87SgsOOkP/8EIAAsGfRjLc0/Bqhf+ej5sOEgEJqrhoj
          uu81Svr3AgMBAAECggEAFfMNbX5mhftp5uTqJOGIm8S3QsjFF0IRlzpewxWMUn/n
          Ff0ZWRfeSH48A/Y5HcuZstEUw/XGPTHUoL6yAGtuU6PqSAb3vfXdvHVye3ANaFka
          dz28EXEPh1c4Qg3VJ4xva7Jc9KxuD+Thh21y0UjusFKR3iyTaDbrslSwcJr3uKvD
          ZKMrjTWnFhevYGA82rLJGIbZsCATlDCEHsJlFXPZLcUlSV+amNJ0AdWWyBDsSp9P
          ydE+DH304GgTZz9t/ukIpLHvtcsEYsnLCA90Xn8hdmvcL4FiFXltjEhRMM5+hXya
          wyBcPxzeWS6vYZ1kOz/p+xBU6kVSCnGp+6XoOJiJcQKBgQDqyvp+4nCV/kgppeQz
          1AT/EuoLgDpZ9COtRFtQnpmIqKzRdwG+85OnnRbAWmDj7GUWbAaGGYVWpmZb822w
          rE9B04gucesfbgn4uMME37RRXuSoVtIxAqBsOrF/FBvDcnJCu5ai4Pws3uAKlfv6
          rI2ZUP0y1pBVHpLGmUJcEJZaKwKBgQC5So2vBEx0yRGJqjAX95rC/+wmS9EbuskQ
          LVDjfj2EL8tYv0J7CWg4Xx0Cu968PpNOl3u8cj2VV7nkHKw9tmANEhgN7i9qnCg+
          HK+IikdvSbzSW06sSpRPcRZ1NifKva+36sCm9r2ut89Q7y65c+dcaGqA2qE5arjS
          I+izcsA4ZQKBgEMR4oaWZrTiI3kKM2r+uMKog4Tvhzuk+wAG09Luy0r3bA6V4UDL
          0bUCsboW1zCkmafTCfYKmkVLWVgQ7JeYUTerlm42CoU66MxM8yCUSq0n30ebLYXk
          izD/fy6e7uNg8PTRI1G51S94JyW+/HD6E6TlNr7r/eTiy+jBZOxprJlrAoGAVkTI
          3LCirEklWjQbujz1GE8xcs8f58o6bMa8f366Q35BLeu2lzRVCtH13tz7oid8TD4p
          RR7nX0395aAX7Y+o/szq2CmKeBeGgQy4CVlgUwdA26vZYExE6wvbCe2R70oLsxSg
          Z9w/ikZYRvVlisDU+mg/Fgk0wVfX/zbq1AncRyUCgYBNPr4TIfkENQ/wB5HglRFr
          ihtBkEMJM0dP4Jl3cKnqq7Knrx52geP9UaCY602VCSJCLtT38yM+a+v840Nqt7oM
          ZhgCiRMf/ZQcdD7wlrveGmQY7cNiaFIHq/kR/naEQiF90fJ9O2Lcd0apt4Tv1HPB
          2kKLtm7EJ3+XwevH94MxsA==
          -----END PRIVATE KEY-----
          EOL
          chmod 600 extension.pem

      - name: Prepare clean directory
        run: |
          mkdir clean_ext
          rsync -av --exclude='*.pem' --exclude='.git*' --exclude='.github' --exclude='*.crx' . clean_ext/

      - name: Install Chrome
        run: |
          wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
          echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" | sudo tee /etc/apt/sources.list.d/google-chrome.list
          sudo apt-get update
          sudo apt-get install -y google-chrome-stable

      - name: Fetch manifest version
        id: manifest
        run: |
          MANIFEST_VERSION=$(curl -s https://raw.githubusercontent.com/${{ github.repository }}/main/manifest.json | jq -r '.version')
          echo "version=$MANIFEST_VERSION" >> $GITHUB_OUTPUT

      - name: Pack Extension
        run: |
          google-chrome --pack-extension="$(pwd)/clean_ext" --pack-extension-key="$(pwd)/extension.pem"
          mv clean_ext.crx "Linkumori.crx"
          
          cat > updates.xml << EOL
          <?xml version='1.0' encoding='UTF-8'?>
          <gupdate xmlns='http://www.google.com/update2/response' protocol='2.0'>
            <app appid="kcpfnbjlimolkcjllfooaipdpdjmjigg">
              <updatecheck 
                codebase='https://github.com/${{ github.repository }}/releases/download/${{ github.event.release.tag_name }}/Linkumori.crx' 
                version='${{ steps.manifest.outputs.version }}' prodversionmin='121.0'/>
            </app>
          </gupdate>
          EOL

      - name: Get Commit History
        id: get_commit_history
        run: |
          # Get commit history since last tag
          PREV_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "none")
          if [ "$PREV_TAG" = "none" ]; then
            HISTORY=$(git log --pretty=format:"* %h - %s (%an)" -10)
          else
            HISTORY=$(git log --pretty=format:"* %h - %s (%an)" $PREV_TAG..HEAD)
          fi
          echo "history<<EOF" >> $GITHUB_OUTPUT
          echo "$HISTORY" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Get Release Body
        id: get_release_body
        run: |
          body=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/releases/${{ github.event.release.id }}" \
            | jq -r .body)
          echo "RELEASE_BODY<<EOF" >> $GITHUB_ENV
          echo "$body" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Update Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            Linkumori.crx
            updates.xml
            config.zip
          body: |
            ${{ env.RELEASE_BODY }}
            
            Version Status: ${{ steps.version_check.outputs.update || steps.version_check.outputs.warning }}
            
            ## üìù Commit History
            ```
            ${{ steps.get_commit_history.outputs.history }}
            ```
            
            ## ‚ö° Quick Installation
            
            ### Method 1: One-Click Install (Recommended)
            1. Download `Linkumori.crx` from above
            2. Open chrome://extensions (or edge://extensions)
            3. Enable "Developer mode" (top-right corner)
            4. Drag & drop the .crx file into the extensions page
            
            ### Method 2: Developer Installation
            1. Download source code (zip)
            2. Extract to a folder
            3. Go to chrome://extensions
            4. Enable "Developer mode"
            5. Click "Load unpacked" ‚Üí select the extracted folder
            
            ## üîÑ Auto-Updates
            * The extension will automatically check for and install updates
            * Updates are delivered through GitHub releases
            
            ## üåê Supported Browsers
            * ‚úÖ Google Chrome
            * ‚úÖ Microsoft Edge
            * ‚úÖ Brave
            * ‚úÖ Opera GX
            * ‚úÖ Vivaldi
            
            ## ‚ö†Ô∏è Keep in Mind
            * If using Method 2, keep the source folder (required for the extension to work)
            * First-time installation may show a warning - this is normal for developer mode extensions
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Cleanup
        if: always()
        run: |
          rm -rf clean_ext
          rm -f extension.pem
          rm -f *.crx
          rm -f *.zip
