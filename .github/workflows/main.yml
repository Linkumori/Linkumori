name: Linkumori Builds and release

permissions:
  contents: write  

on:
  release:
    types: [created]

jobs:
  pack-and-release:
    runs-on: ubuntu-latest
    env:
      EXTENSION_ID: mfedlkokfjjhjlmpddhphlnechbedmnp
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Your existing PEM file step remains the same
      - name: Create PEM file
        run: |
          cat > extension.pem << 'EOL'
          -----BEGIN PRIVATE KEY-----
          MIIEvAIBADANBgkqhkiG9w0BAQEFAASCBKYwggSiAgEAAoIBAQCp8Q+kavs7radl
          cNbSkJFovhnAkg0v3CMKdoiVK26CvSEkuJXfLB3FOPlFkSPo1cj9Zwld2fW59V5/
          Z6gQ28+pxf2o0N+1Pyi80JtbT5DME9gW1GiTqX41Jm/wYINMSBGqhpUhklwcZZSB
          Fox+Fkxz7j4pm64f95HKa6ETMlrhZ5p1a6KhzMHnl83jdB/E61cSaWKo1ZjvWJO6
          Ap075d5MscKS1pAsrd9EnN3FcxICokD1GpTmkoNsDyWcF8A+kKXotUb+Ix0TwirK
          4IKV3IpJqpIVwdPPmcG1/87SgsOOkP/8EIAAsGfRjLc0/Bqhf+ej5sOEgEJqrhoj
          uu81Svr3AgMBAAECggEAFfMNbX5mhftp5uTqJOGIm8S3QsjFF0IRlzpewxWMUn/n
          Ff0ZWRfeSH48A/Y5HcuZstEUw/XGPTHUoL6yAGtuU6PqSAb3vfXdvHVye3ANaFka
          dz28EXEPh1c4Qg3VJ4xva7Jc9KxuD+Thh21y0UjusFKR3iyTaDbrslSwcJr3uKvD
          ZKMrjTWnFhevYGA82rLJGIbZsCATlDCEHsJlFXPZLcUlSV+amNJ0AdWWyBDsSp9P
          ydE+DH304GgTZz9t/ukIpLHvtcsEYsnLCA90Xn8hdmvcL4FiFXltjEhRMM5+hXya
          wyBcPxzeWS6vYZ1kOz/p+xBU6kVSCnGp+6XoOJiJcQKBgQDqyvp+4nCV/kgppeQz
          1AT/EuoLgDpZ9COtRFtQnpmIqKzRdwG+85OnnRbAWmDj7GUWbAaGGYVWpmZb822w
          rE9B04gucesfbgn4uMME37RRXuSoVtIxAqBsOrF/FBvDcnJCu5ai4Pws3uAKlfv6
          rI2ZUP0y1pBVHpLGmUJcEJZaKwKBgQC5So2vBEx0yRGJqjAX95rC/+wmS9EbuskQ
          LVDjfj2EL8tYv0J7CWg4Xx0Cu968PpNOl3u8cj2VV7nkHKw9tmANEhgN7i9qnCg+
          HK+IikdvSbzSW06sSpRPcRZ1NifKva+36sCm9r2ut89Q7y65c+dcaGqA2qE5arjS
          I+izcsA4ZQKBgEMR4oaWZrTiI3kKM2r+uMKog4Tvhzuk+wAG09Luy0r3bA6V4UDL
          0bUCsboW1zCkmafTCfYKmkVLWVgQ7JeYUTerlm42CoU66MxM8yCUSq0n30ebLYXk
          izD/fy6e7uNg8PTRI1G51S94JyW+/HD6E6TlNr7r/eTiy+jBZOxprJlrAoGAVkTI
          3LCirEklWjQbujz1GE8xcs8f58o6bMa8f366Q35BLeu2lzRVCtH13tz7oid8TD4p
          RR7nX0395aAX7Y+o/szq2CmKeBeGgQy4CVlgUwdA26vZYExE6wvbCe2R70oLsxSg
          Z9w/ikZYRvVlisDU+mg/Fgk0wVfX/zbq1AncRyUCgYBNPr4TIfkENQ/wB5HglRFr
          ihtBkEMJM0dP4Jl3cKnqq7Knrx52geP9UaCY602VCSJCLtT38yM+a+v840Nqt7oM
          ZhgCiRMf/ZQcdD7wlrveGmQY7cNiaFIHq/kR/naEQiF90fJ9O2Lcd0apt4Tv1HPB
          2kKLtm7EJ3+XwevH94MxsA==
          -----END PRIVATE KEY-----
          EOL
          chmod 600 extension.pem

      - name: Prepare clean directory
        run: |
          mkdir clean_ext
          rsync -av --exclude='*.pem' --exclude='.git*' --exclude='.github' --exclude='*.crx' . clean_ext/

      - name: Install Chrome
        run: |
          wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
          echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" | sudo tee /etc/apt/sources.list.d/google-chrome.list
          sudo apt-get update
          sudo apt-get install -y google-chrome-stable

      # New step to fetch and extract version from manifest.json
      - name: Fetch manifest version
        id: manifest
        run: |
          MANIFEST_VERSION=$(curl -s https://raw.githubusercontent.com/subham8907/Linkumori/main/manifest.json | jq -r '.version')
          echo "version=$MANIFEST_VERSION" >> $GITHUB_OUTPUT

      - name: Pack Extension
        run: |
          google-chrome --pack-extension="$(pwd)/clean_ext" --pack-extension-key="$(pwd)/extension.pem"
          mv clean_ext.crx "Linkumori.crx"
          
          # Generate updates.xml with version from manifest.json
          cat > updates.xml << EOL
          <?xml version='1.0' encoding='UTF-8'?>
          <gupdate xmlns='http://www.google.com/update2/response' protocol='2.0'>
            <app appid="kcpfnbjlimolkcjllfooaipdpdjmjigg">
              <updatecheck 
                codebase='https://github.com/subham8907/Linkumori/releases/download/${{ github.event.release.tag_name }}/Linkumori.crx' 
                version='${{ steps.manifest.outputs.version }}' />
            </app>
          </gupdate>
          EOL

      - name: Create PowerShell Script
        run: |
          cat > ModifyReg.ps1 << EOL
          # Self-elevate the script if required
if (-Not ([Security.Principal.WindowsPrincipal] [Security.Principal.WindowsIdentity]::GetCurrent()).IsInRole([Security.Principal.WindowsBuiltInRole] 'Administrator')) {
    if ([int](Get-CimInstance -Class Win32_OperatingSystem | Select-Object -ExpandProperty BuildNumber) -ge 6000) {
        $CommandLine = "-File `"" + $MyInvocation.MyCommand.Path + "`" " + $MyInvocation.UnboundArguments
        Start-Process -FilePath PowerShell.exe -Verb RunAs -ArgumentList $CommandLine
        Exit
    }
}

function Show-Menu {
    Clear-Host
    Write-Host "================================" -ForegroundColor Cyan
    Write-Host "Browser Registry Installation Script" -ForegroundColor Cyan
    Write-Host "================================" -ForegroundColor Cyan
    Write-Host "1. Install for Chrome"
    Write-Host "2. Install for Brave"
    Write-Host "3. Install for Edge"
    Write-Host "4. Install for All Browsers"
    Write-Host "5. Exit"
    Write-Host ""
}

function Install-ChromeRegistry {
    Write-Host "`nInstalling registry entries for Chrome..." -ForegroundColor Yellow
    try {
        New-Item -Path "HKLM:\SOFTWARE\Policies\Google\Chrome" -Force | Out-Null
        New-Item -Path "HKLM:\SOFTWARE\Policies\Google\Chrome\ExtensionInstallAllowlist" -Force | Out-Null
        New-Item -Path "HKLM:\SOFTWARE\Policies\Google\Chrome\ExtensionInstallSources" -Force | Out-Null
        
        Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Google\Chrome\ExtensionInstallAllowlist" `
            -Name "1" `
            -Value "kcpfnbjlimolkcjllfooaipdpdjmjigg" `
            -Type String -Force
            
        Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Google\Chrome\ExtensionInstallSources" `
            -Name "1" `
            -Value "https://github.com/subham8907/Linkumori/releases/latest/download/updates.xml*" `
            -Type String -Force
            
        Write-Host "Chrome registry entries installed successfully." -ForegroundColor Green
    }
    catch {
        Write-Host "Error installing Chrome registry entries: $_" -ForegroundColor Red
    }
}

function Install-BraveRegistry {
    Write-Host "`nInstalling registry entries for Brave..." -ForegroundColor Yellow
    try {
        New-Item -Path "HKLM:\SOFTWARE\Policies\BraveSoftware\Brave" -Force | Out-Null
        New-Item -Path "HKLM:\SOFTWARE\Policies\BraveSoftware\Brave\ExtensionInstallAllowlist" -Force | Out-Null
        New-Item -Path "HKLM:\SOFTWARE\Policies\BraveSoftware\Brave\ExtensionInstallSources" -Force | Out-Null
        
        Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\BraveSoftware\Brave\ExtensionInstallAllowlist" `
            -Name "1" `
            -Value "kcpfnbjlimolkcjllfooaipdpdjmjigg" `
            -Type String -Force
            
        Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\BraveSoftware\Brave\ExtensionInstallSources" `
            -Name "1" `
            -Value "https://github.com/subham8907/Linkumori/releases/latest/download/updates.xml*" `
            -Type String -Force
            
        Write-Host "Brave registry entries installed successfully." -ForegroundColor Green
    }
    catch {
        Write-Host "Error installing Brave registry entries: $_" -ForegroundColor Red
    }
}

function Install-EdgeRegistry {
    Write-Host "`nInstalling registry entries for Edge..." -ForegroundColor Yellow
    try {
        New-Item -Path "HKLM:\SOFTWARE\Policies\Microsoft\Edge" -Force | Out-Null
        New-Item -Path "HKLM:\SOFTWARE\Policies\Microsoft\Edge\ExtensionInstallAllowlist" -Force | Out-Null
        New-Item -Path "HKLM:\SOFTWARE\Policies\Microsoft\Edge\ExtensionInstallSources" -Force | Out-Null
        
        Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Edge\ExtensionInstallAllowlist" `
            -Name "1" `
            -Value "kcpfnbjlimolkcjllfooaipdpdjmjigg" `
            -Type String -Force
            
        Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Edge\ExtensionInstallSources" `
            -Name "1" `
            -Value "https://github.com/subham8907/Linkumori/releases/latest/download/updates.xml*" `
            -Type String -Force
            
        Write-Host "Edge registry entries installed successfully." -ForegroundColor Green
    }
    catch {
        Write-Host "Error installing Edge registry entries: $_" -ForegroundColor Red
    }
}

function Install-AllBrowsers {
    Write-Host "`nInstalling registry entries for all browsers..." -ForegroundColor Yellow
    Install-ChromeRegistry
    Install-BraveRegistry
    Install-EdgeRegistry
}

# Main script loop
do {
    Show-Menu
    $choice = Read-Host "Enter your choice (1-5)"
    
    switch ($choice) {
        "1" { Install-ChromeRegistry }
        "2" { Install-BraveRegistry }
        "3" { Install-EdgeRegistry }
        "4" { Install-AllBrowsers }
        "5" { 
            Write-Host "`nExiting script..." -ForegroundColor Yellow
            Start-Sleep -Seconds 2
            exit 
        }
        default { 
            Write-Host "`nInvalid choice. Please try again." -ForegroundColor Red
            Start-Sleep -Seconds 2
        }
    }
    
    if ($choice -in "1", "2", "3", "4") {
        Write-Host "`nDo you want to perform another operation?" -ForegroundColor Cyan
        $continue = Read-Host "Press 'Y' to continue or any other key to exit"
        if ($continue -notmatch '^[Yy]$') {
            Write-Host "`nThank you for using the script." -ForegroundColor Green
            Start-Sleep -Seconds 2
            break
        }
    }
} while ($true)
EOL
      - name: Get Release Body
        id: get_release_body
        run: |
          body=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/releases/${{ github.event.release.id }}" \
            | jq -r .body)
          echo "RELEASE_BODY<<EOF" >> $GITHUB_ENV
          echo "$body" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Update Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            Linkumori.crx
            updates.xml
            ModifyReg.ps1
          body: |
            ${{ env.RELEASE_BODY }}
            
            
            ## ⚡ Quick Installation
            
            ### Method 1: One-Click Install (Recommended)
            1. Download `Linkumori.crx` from above
            2. Open chrome://extensions (or edge://extensions)
            3. Enable "Developer mode" (top-right corner)
            4. Drag & drop the .crx file into the extensions page
            
            ### Method 2: Developer Installation
            1. Download source code (zip)
            2. Extract to a folder
            3. Go to chrome://extensions
            4. Enable "Developer mode"
            5. Click "Load unpacked" → select the extracted folder
            
            ## 🔄 Auto-Updates
            * The extension will automatically check for and install updates
            * Updates are delivered through GitHub releases
            
            ## 🌐 Supported Browsers
            * ✅ Google Chrome
            * ✅ Microsoft Edge
            * ✅ Brave
            * ✅ Opera GX
            * ✅ Vivaldi
            
            ## ⚠️ Keep in Mind
            * If using Method 2, keep the source folder (required for the extension to work)
            * First-time installation may show a warning - this is normal for developer mode extensions
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Cleanup
        if: always()
        run: |
          rm -rf clean_ext
          rm -f extension.pem
          rm -f *.crx
