name: Upload Chrome Extension (with debugging)
on:
  workflow_run:
    workflows: ["main"]
    types:
      - completed

jobs:
  upload-to-store:
    runs-on: ubuntu-latest
    steps:
      # Debug steps to understand workflow context
      - name: Debug workflow context
        run: |
          echo "Workflow run status: ${{ github.event.workflow_run.conclusion }}"
          echo "Workflow name: ${{ github.event.workflow_run.name }}"
          echo "Workflow ID: ${{ github.event.workflow_run.id }}"
          
      # Only proceed if previous workflow succeeded
      - name: Check workflow status
        id: check-status
        run: |
          if [ "${{ github.event.workflow_run.conclusion }}" == "success" ]; then
            echo "Previous workflow succeeded, proceeding with upload"
            echo "should_proceed=true" >> $GITHUB_OUTPUT
          else
            echo "Previous workflow status: ${{ github.event.workflow_run.conclusion }}"
            echo "Skipping upload"
            echo "should_proceed=false" >> $GITHUB_OUTPUT
          fi

      - name: Checkout code
        if: steps.check-status.outputs.should_proceed == 'true'
        uses: actions/checkout@v4
            
      # Rest of your steps, each with the conditional
      - name: Create ZIP file
        if: steps.check-status.outputs.should_proceed == 'true'
        run: |
          zip -r extension.zip . \
            -x "*.git*" \
            -x "*.github*" \
            -x "node_modules/*" \
            -x "tests/*"
            
      - name: Get access token
        if: steps.check-status.outputs.should_proceed == 'true'
        id: get-token
        run: |
          RESPONSE=$(curl -s -X POST \
            -d "client_id=${{ secrets.CLIENT_ID }}" \
            -d "client_secret=${{ secrets.CLIENT_SECRET }}" \
            -d "refresh_token=${{ secrets.REFRESH_TOKEN }}" \
            -d "grant_type=refresh_token" \
            "https://oauth2.googleapis.com/token")
          
          ACCESS_TOKEN=$(echo $RESPONSE | jq -r '.access_token')
          echo "access_token=$ACCESS_TOKEN" >> $GITHUB_OUTPUT

      - name: Upload to Chrome Web Store
        if: steps.check-status.outputs.should_proceed == 'true'
        run: |
          # Upload the ZIP file
          UPLOAD_RESPONSE=$(curl -s -X PUT \
            -H "Authorization: Bearer ${{ steps.get-token.outputs.access_token }}" \
            -H "x-goog-api-version: 2" \
            -T extension.zip \
            "https://www.googleapis.com/upload/chromewebstore/v1.1/items/${{ secrets.EXTENSION_ID }}")
          
          # Check upload status
          UPLOAD_STATUS=$(echo $UPLOAD_RESPONSE | jq -r '.uploadState')
          
          if [ "$UPLOAD_STATUS" != "SUCCESS" ]; then
            echo "Upload failed with response: $UPLOAD_RESPONSE"
            exit 1
          fi
          
          # Publish the extension
          PUBLISH_RESPONSE=$(curl -s -X POST \
            -H "Authorization: Bearer ${{ steps.get-token.outputs.access_token }}" \
            -H "x-goog-api-version: 2" \
            -H "Content-Length: 0" \
            "https://www.googleapis.com/chromewebstore/v1.1/items/${{ secrets.EXTENSION_ID }}/publish")
          
          PUBLISH_STATUS=$(echo $PUBLISH_RESPONSE | jq -r '.status[0]')
          
          if [ "$PUBLISH_STATUS" != "OK" ]; then
            echo "Publishing failed with response: $PUBLISH_RESPONSE"
            exit 1
          fi
          
          echo "Extension successfully uploaded and published!"
